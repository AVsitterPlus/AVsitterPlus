#!/bin/bash

usage() {
    printf "\nUsage: mkrelease [-c] [-d] [-p] [-u]"
    printf "\nWhere:"
    printf "\n\t-c indicates clean first"
    printf "\n\t-d indicates create draft release"
    printf "\n\t-p indicates skip package creation step"
    printf "\n\t-u displays this usage message and exits\n"
    exit 1
}

CLEAN=
DRAFT=
PACKAGE=1
BRANCH="master"
VERSION=

[ -f VERSION ] && source VERSION

while getopts "b:cdpuv:" flag; do
    case $flag in
        b)
            BRANCH="${OPTARG}"
            ;;
        c)
            CLEAN=1
            ;;
        d)
            DRAFT="--draft"
            ;;
        p)
            PACKAGE=
            ;;
        v)
            VERSION="${OPTARG}"
            ;;
        u)
            usage
            ;;
    esac
done
shift $(( OPTIND - 1 ))

[ "${VERSION}" ] || VERSION="2.3beta"
ANNO="AVsitterPlus release, Version ${VERSION}"

if [ -f ${HOME}/.mrprivate ]; then
  source ${HOME}/.mrprivate
else
  echo "ERROR: Could not locate ${HOME}/.mrprivate"
  exit 1
fi

SCRIPT_PATH="$(
  cd "$(dirname "$0")"
  pwd -P
)"
have_real=$(type -p realpath)
[ "${have_real}" ] && SCRIPT_PATH="$(realpath $SCRIPT_PATH)"

[ -d ${SCRIPT_PATH}/AVsitterPlus ] || {
  echo "ERROR: ${SCRIPT_PATH}/AVsitterPlus does not exist. Exiting."
  exit 1
}
cd ${SCRIPT_PATH}/AVsitterPlus
make clean
make release
cd ${SCRIPT_PATH}

gh release create v${VERSION} ${DRAFT} \
                  --title "${ANNO}" \
                  --target "${BRANCH}" \
                  --notes-file Release_Notes.md \
                  AVsitterPlus/AVsitterPlus-oss.zip \
                  AVsitterPlus/AVsitterPlus.zip

git fetch --tags origin
